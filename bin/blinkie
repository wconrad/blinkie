#!/usr/bin/env ruby

require "gosu"
require "rmagick"

class Led

  WIDTH = HEIGHT = 32
  LED_OFF_COLOR = "#440000"
  LED_ON_COLOR = "#aa3300"

  attr_accessor :on

  def initialize(left:, top:)
    @top = top
    @left = left
    @on = false
    @led_on_image = circle(LED_ON_COLOR)
    @led_off_image = circle(LED_OFF_COLOR)
  end

  def draw
    scale = 1
    image = @on ? @led_on_image : @led_off_image
    image.draw(@left, @top, 0, scale, scale)
  end

  private

  def image(on)
    @images[!!on]
  end

  def circle(color)
    Gosu::Image.new(rmagick_circle(color))
  end

  def rmagick_circle(color)
    image = Magick::Image.new(WIDTH, HEIGHT) do
      self.background_color = "none"
    end
    gc = Magick::Draw.new
    origin_x = WIDTH / 2
    origin_y = HEIGHT / 2
    perim_x = WIDTH / 2
    perim_y = 1
    gc.fill_color(color)
    gc.circle(origin_x, origin_y, perim_x, perim_y)
    gc.draw(image)
    image
  end

end

class GameWindow < Gosu::Window

  LED_OFF_COLOR = "#440000"
  LED_ON_COLOR = "#aa3300"

  def initialize
    super 640, 480
    self.caption = "Gosu Tutorial Game"
    num_leds = 8
    @leds = (0...num_leds).map do |i|
      position = (num_leds - 1) - i
      Led.new(left: Led::WIDTH * position, top: 0)
    end
    @count = 123
    Thread.new do
      loop do
        @count += 1
        sleep(0.1)
      end
    end
  end

  def needs_cursor?
    true
  end

  def update
  end

  def draw
    draw_background
    (@leds.size - 1).downto(0).each do |i|
      bit = (@count >> i) & 1
      @leds[i].on = (bit != 0)
    end
    @leds.each(&:draw)
  end

  BACKGROUND_COLOR = 0xff_666666

  def draw_background
    color = Gosu::Color.argb(BACKGROUND_COLOR)
    Gosu.draw_rect(0, 0, width, height, color)
  end

  def draw_rect(x1, y1, x2, y2, color)
    draw_quad(
      0, 0, color,
      width, 0, color,
      0, height, color,
      width, height, color,
      0,
    )
  end

end

window = GameWindow.new
window.show
